{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormGroup, Validators } from '@angular/forms';\nimport { validate, clean, format } from 'rut.js';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/comunication-services.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nfunction InicioComponent_div_0_small_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"El RUT ingresado no es correcto\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InicioComponent_div_0_small_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"min 8 letras o numeros\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InicioComponent_div_0_small_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"El RUT ingresado no es correcto\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InicioComponent_div_0_small_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"Campo requirido\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InicioComponent_div_0_small_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"min 8 letras o numeros\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InicioComponent_div_0_small_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"Email no v\\u00E1lido\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InicioComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"ul\", 3)(3, \"li\", 4)(4, \"a\", 5);\n    i0.ɵɵtext(5, \"Login\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"li\", 4)(7, \"a\", 6);\n    i0.ɵɵtext(8, \"Registrarse\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"div\", 9)(12, \"form\", 10);\n    i0.ɵɵlistener(\"ngSubmit\", function InicioComponent_div_0_Template_form_ngSubmit_12_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.submitLogin());\n    });\n    i0.ɵɵelementStart(13, \"div\", 11)(14, \"label\", 12);\n    i0.ɵɵtext(15, \"RUT \");\n    i0.ɵɵelementStart(16, \"span\", 13);\n    i0.ɵɵtext(17, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(18, InicioComponent_div_0_small_18_Template, 2, 0, \"small\", 14);\n    i0.ɵɵelementStart(19, \"input\", 15);\n    i0.ɵɵlistener(\"keyup\", function InicioComponent_div_0_Template_input_keyup_19_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.verificarRut($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"div\", 11)(21, \"label\", 12);\n    i0.ɵɵtext(22, \"Password \");\n    i0.ɵɵelementStart(23, \"span\", 13);\n    i0.ɵɵtext(24, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(25, InicioComponent_div_0_small_25_Template, 2, 0, \"small\", 14);\n    i0.ɵɵelement(26, \"input\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 11);\n    i0.ɵɵelement(28, \"input\", 17);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(29, \"div\", 18)(30, \"div\", 9)(31, \"form\", 19);\n    i0.ɵɵlistener(\"ngSubmit\", function InicioComponent_div_0_Template_form_ngSubmit_31_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.submitRegistro());\n    });\n    i0.ɵɵelementStart(32, \"div\", 11)(33, \"label\", 12);\n    i0.ɵɵtext(34, \"RUT \");\n    i0.ɵɵelementStart(35, \"span\", 13);\n    i0.ɵɵtext(36, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(37, InicioComponent_div_0_small_37_Template, 2, 0, \"small\", 14);\n    i0.ɵɵelementStart(38, \"input\", 20);\n    i0.ɵɵlistener(\"keyup\", function InicioComponent_div_0_Template_input_keyup_38_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.verificarRut($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(39, \"div\", 11)(40, \"label\", 12);\n    i0.ɵɵtext(41, \"Nombre \");\n    i0.ɵɵelementStart(42, \"span\", 13);\n    i0.ɵɵtext(43, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(44, InicioComponent_div_0_small_44_Template, 2, 0, \"small\", 14);\n    i0.ɵɵelement(45, \"input\", 21);\n    i0.ɵɵelementStart(46, \"div\", 11)(47, \"label\", 12);\n    i0.ɵɵtext(48, \"Password \");\n    i0.ɵɵelementStart(49, \"span\", 13);\n    i0.ɵɵtext(50, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(51, InicioComponent_div_0_small_51_Template, 2, 0, \"small\", 14);\n    i0.ɵɵelement(52, \"input\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(53, \"div\", 11)(54, \"label\", 12);\n    i0.ɵɵtext(55, \"Email \");\n    i0.ɵɵelementStart(56, \"span\", 13);\n    i0.ɵɵtext(57, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(58, InicioComponent_div_0_small_58_Template, 2, 0, \"small\", 14);\n    i0.ɵɵelement(59, \"input\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(60, \"div\", 11);\n    i0.ɵɵelement(61, \"input\", 24);\n    i0.ɵɵelementEnd()()()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.datosLogin);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.rutNoValido);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r0.rutNoValidoLogin);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.passwordNoValidoLogin);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r0.passwordNoValidoLogin);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.datosRegistro);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.rutNoValido);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r0.rutNoValido);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nombreNoValido);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r0.nombreNoValido);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.passwordNoValidoRegistro);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r0.passwordNoValidoRegistro);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.emailNoValido);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r0.emailNoValido);\n  }\n}\n\nfunction InicioComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Hola \", ctx_r1.sesion.usuario.nombre, \", puedes hacer varias cosas\");\n  }\n}\n\nexport let InicioComponent = /*#__PURE__*/(() => {\n  class InicioComponent {\n    constructor(fb, _cs, router) {\n      this.fb = fb;\n      this._cs = _cs;\n      this.router = router;\n      this.alreadyLogged = false;\n      this.noValidos = ['19', '1111111', '2222222', '3333333', '4444444', '5555555', '6666666', '7777777', '8888888', '9999999', '1234567', '7654321', '11111111', '22222222', '33333333', '44444444', '55555555', '66666666', '77777777', '88888888', '99999999', '12345678', '87654321']; //RegExp para validar correos en JS\n\n      this.emailPattern = '^(?=.{1,64}@)[A-Za-z0-9_-]+(\\\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\\\.[A-Za-z0-9-]+)*(\\\\.[A-Za-z]{2,})$';\n    }\n\n    ngOnInit() {\n      this.crearFormularios();\n      this.chequearSesion();\n    }\n    /**\n     * Definicion de Getter's parar la validacion de formularios\n     * los metodos GET devuelven un booleano según la evaluación\n     * y son invocados por angular dentro del html como si fueran un observable\n     */\n\n\n    get nombreNoValido() {\n      return this.datosRegistro.get('nombre').invalid && this.datosRegistro.get('nombre').touched;\n    }\n\n    get emailNoValido() {\n      return this.datosRegistro.get('email').invalid && this.datosRegistro.get('email').touched;\n    }\n\n    get passwordNoValidoLogin() {\n      return this.datosLogin.get('password').invalid && this.datosLogin.get('password').touched;\n    }\n\n    get rutNoValido() {\n      return this.datosRegistro.get('rut').invalid && this.datosRegistro.get('rut').touched;\n    }\n\n    get passwordNoValidoRegistro() {\n      return this.datosRegistro.get('password').invalid && this.datosRegistro.get('password').touched;\n    }\n\n    get rutLogin() {\n      return this.datosLogin.get('rut');\n    }\n\n    get rutNoValidoLogin() {\n      return this.datosLogin.get('rut').invalid && this.datosLogin.get('rut').touched;\n    }\n\n    get rut() {\n      return this.datosRegistro.get('rut');\n    }\n\n    chequearSesion() {\n      this.sesion = JSON.parse(localStorage.getItem('login') || '{}');\n\n      if (this.sesion) {\n        if (Object.keys(this.sesion).length > 0) {\n          this.alreadyLogged = true;\n        }\n      }\n    }\n    /**\n     * Metodo para instanciar el formulario Reactivo\n     */\n\n\n    crearFormularios() {\n      return __awaiter(this, void 0, void 0, function* () {\n        //Se crea la instancia FromGroup para el formulario reactivo\n        //Definiendo las reglas de validacion para cada campo del formulario\n        this.datosLogin = this.fb.group({\n          rut: ['', [Validators.required]],\n          password: ['', [Validators.required, Validators.minLength(8)]]\n        });\n        this.datosRegistro = this.fb.group({\n          nombre: ['', [Validators.required, Validators.minLength(3), Validators.pattern('^[a-zA-ZzñÑáéíóúÁÉÍÓÚ]+$')]],\n          email: ['', [Validators.required, Validators.pattern(this.emailPattern)]],\n          rut: ['', [Validators.required]],\n          password: ['', [Validators.required, Validators.minLength(8)]]\n        });\n      });\n    }\n    /**\n     * Metodo para verificar y formatear el RUT del nuevo destinatario\n     * @param e (event)\n     */\n\n\n    verificarRut(e) {\n      let esRutValido = this.noValidos.includes(e.target.value);\n      console.log('Es RUT Valido: ' + esRutValido); //El rango inferior del RUT\n\n      let esMayor = parseInt(e.target.value) > 1000000; //El Rango Superior del RUT\n\n      let esMenor = parseInt(e.target.value) < 50000000; //Si el RUT es valido y se mantiene en el rango\n\n      if (!esRutValido || !esMenor && !esMayor) {\n        let cleanValue = clean(e.target.value);\n        let esValido = validate(cleanValue);\n        let formateado = format(cleanValue);\n\n        if (!esValido) {\n          this.rutLogin.setErrors({\n            rutNovalido: true\n          });\n          this.rutLogin.markAsDirty();\n          this.rut.setErrors({\n            rutNovalido: true\n          });\n          this.rut.markAsDirty();\n        } else {\n          this.rutLogin.setErrors(null);\n          this.rutLogin.setValue(formateado);\n          this.rut.setErrors(null);\n          this.rut.setValue(formateado);\n        }\n      } else {\n        this.rut.setErrors({\n          rutNovalido: true\n        });\n        this.rut.markAsDirty();\n      }\n    }\n\n    submitLogin() {\n      return __awaiter(this, void 0, void 0, function* () {\n        //Si el formulario no es valido entonces se hace una evaluación de cada uno\n        //de los elementos reactivos y se hace resaltar en la vista cuales son los\n        //elementos no validos\n        console.log(this.datosLogin.invalid);\n\n        if (this.datosLogin.invalid) {\n          return Object.values(this.datosLogin.controls).forEach(control => {\n            if (control instanceof FormGroup) {\n              Object.values(control.controls).forEach(control => control.markAsTouched());\n            }\n          });\n        }\n\n        this._cs.usuarioLogin(this.datosLogin.value).subscribe(response => {\n          if (response.ok) {\n            let data = response.body;\n\n            if (data) {\n              localStorage.setItem('login', JSON.stringify(data));\n              this.router.navigate(['/historial']).then(() => {\n                window.location.reload();\n              });\n            }\n          } else {\n            Swal.fire(`usuario o contrasena incorrectos`);\n          }\n        }, error => {\n          Swal.fire(`usuario o contrasena incorrectos`);\n        });\n      });\n    }\n\n    submitRegistro() {\n      return __awaiter(this, void 0, void 0, function* () {\n        //Si el formulario no es valido entonces se hace una evaluación de cada uno\n        //de los elementos reactivos y se hace resaltar en la vista cuales son los\n        //elementos no validos\n        if (this.datosRegistro.invalid) {\n          return Object.values(this.datosRegistro.controls).forEach(control => {\n            if (control instanceof FormGroup) {\n              Object.values(control.controls).forEach(control => control.markAsTouched());\n            }\n          });\n        } //TODO: SwalFire\n\n\n        Swal.fire({\n          title: 'Deseas guardar el destinatario',\n          icon: 'warning',\n          confirmButtonText: 'Sí, guardar',\n          cancelButtonText: 'Cancelar',\n          showLoaderOnConfirm: true,\n          allowOutsideClick: false,\n          preConfirm: () => {\n            //El metodo preConfirm de Swal permite ejecutar una llamada ASYNC al servicio y esperar\n            //la respuesta para continuar con la ejecución\n            //Necesito recoger el rut del cliente\n            this._cs.registroUsuario(this.datosRegistro.value).then(response => {\n              if (response.ok) {\n                Swal.fire(`Se ha creado tu usuario`);\n                return response.body;\n              }\n            }).catch(error => {\n              console.error(error.message);\n            });\n          }\n        }).then(result => {\n          if (result.isConfirmed) {\n            console.log(result.value);\n            Swal.fire({\n              title: `Los datos fueron guardados correctamente`,\n              toast: true\n            });\n          }\n        });\n      });\n    }\n\n  }\n\n  InicioComponent.ɵfac = function InicioComponent_Factory(t) {\n    return new (t || InicioComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ComunicationService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  InicioComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InicioComponent,\n    selectors: [[\"app-inicio\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[\"class\", \"container mt-5 mb-4\", 4, \"ngIf\"], [1, \"container\", \"mt-5\", \"mb-4\"], [1, \"col-sm-8\", \"ml-auto\", \"mr-auto\"], [\"id\", \"pills-tab\", \"role\", \"tablist\", 1, \"nav\", \"nav-pills\", \"nav-fill\", \"mb-1\"], [1, \"nav-item\"], [\"id\", \"pills-signin-tab\", \"data-toggle\", \"pill\", \"href\", \"#pills-signin\", \"role\", \"tab\", \"aria-controls\", \"pills-signin\", \"aria-selected\", \"true\", 1, \"nav-link\", \"active\"], [\"id\", \"pills-signup-tab\", \"data-toggle\", \"pill\", \"href\", \"#pills-signup\", \"role\", \"tab\", \"aria-controls\", \"pills-signup\", \"aria-selected\", \"false\", 1, \"nav-link\"], [\"id\", \"pills-tabContent\", 1, \"tab-content\"], [\"id\", \"pills-signin\", \"role\", \"tabpanel\", \"aria-labelledby\", \"pills-signin-tab\", 1, \"tab-pane\", \"fade\", \"show\", \"active\"], [1, \"col-sm-12\", \"border\", \"border-primary\", \"shadow\", \"rounded\", \"pt-2\"], [\"id\", \"loginform\", \"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [1, \"font-weight-bold\"], [1, \"text-danger\"], [\"class\", \"danger\", 4, \"ngIf\"], [\"type\", \"text\", \"name\", \"rut\", \"formControlName\", \"rut\", \"placeholder\", \"RUT\", 1, \"form-control\", 3, \"keyup\"], [\"type\", \"password\", \"placeholder\", \"*******\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", \"name\", \"submit\", \"value\", \"Login\", 1, \"btn\", \"btn-block\", \"btn-primary\"], [\"id\", \"pills-signup\", \"role\", \"tabpanel\", \"aria-labelledby\", \"pills-signup-tab\", 1, \"tab-pane\", \"fade\"], [\"id\", \"registroform\", \"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"rut\", \"placeholder\", \"RUT\", 1, \"form-control\", 3, \"keyup\"], [\"type\", \"text\", \"id\", \"password\", \"placeholder\", \"Nombre\", \"formControlName\", \"nombre\", 1, \"form-control\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"*******\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"type\", \"submit\", \"name\", \"submit\", \"value\", \"Registro\", 1, \"btn\", \"btn-block\", \"btn-primary\"], [1, \"danger\"]],\n    template: function InicioComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, InicioComponent_div_0_Template, 62, 20, \"div\", 0);\n        i0.ɵɵtemplate(1, InicioComponent_div_1_Template, 3, 1, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.alreadyLogged == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.alreadyLogged == true);\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return InicioComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}