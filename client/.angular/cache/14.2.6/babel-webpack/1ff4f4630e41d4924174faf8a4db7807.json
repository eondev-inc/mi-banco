{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/comunication-services.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/autocomplete\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\n\nfunction TransferenciasComponent_mat_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r3.nombre);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r3.nombre, \" \");\n  }\n}\n\nfunction TransferenciasComponent_small_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 28);\n    i0.ɵɵtext(1, \"Monto debe ser mayor a 0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let TransferenciasComponent = /*#__PURE__*/(() => {\n  class TransferenciasComponent {\n    constructor(_cs, fb) {\n      this._cs = _cs;\n      this.fb = fb;\n      this.busquedaResultados = [];\n      this.busquedaControl = new FormControl();\n      this.resultados = [];\n    }\n\n    ngOnInit() {\n      this.init();\n      this.obtenerDatos();\n      this.filteredOptions = this.busquedaControl.valueChanges.pipe(startWith(''), map(value => this._filtro(value)));\n      this.crearFormulario();\n    }\n\n    get montoNoValido() {\n      return this.datosTransferencia.get('monto').invalid && this.datosTransferencia.get('monto').touched && Number(this.datosTransferencia.get('monto').value) !== 0;\n    }\n\n    crearFormulario() {\n      this.datosTransferencia = this.fb.group({\n        nombre: ['', [Validators.required]],\n        rut_destinatario: ['', [Validators.required]],\n        email: ['', [Validators.required]],\n        tipo_cuenta: ['', [Validators.required]],\n        banco: ['', [Validators.required]],\n        cuenta: ['', [Validators.required]],\n        monto: ['', [Validators.required, Validators.min(1)]]\n      });\n    }\n\n    obtenerDatos() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.init();\n\n        this._cs.buscarDestinatarios(this.rut).subscribe(response => {\n          this.busquedaResultados = response.body.destinatarios;\n          console.log('Destinatarios', this.busquedaResultados);\n        }, error => {\n          console.error(error.message);\n          Swal.fire(`No tienes destinatarios`);\n        });\n      });\n    }\n\n    init() {\n      let login = JSON.parse(localStorage.getItem('login'));\n\n      if (Object.keys(login).length > 0) {\n        this.rut = login.usuario.rut;\n      }\n    }\n\n    _filtro(value) {\n      const filterValue = value.toLowerCase();\n      return this.busquedaResultados.filter(option => option.nombre.toLowerCase().includes(filterValue));\n    }\n    /**\n     * Filtrar el ARRAY resultado segun el valor sseleccionado para\n     * @param $event\n     */\n\n\n    selectedOne($event) {\n      let input = $event.target.value.toLowerCase();\n      this.resultados = this.busquedaResultados.filter(option => option.nombre.toLowerCase().includes(input));\n      this.datosTransferencia.setValue({\n        rut_destinatario: this.resultados[0].rut_destinatario,\n        nombre: this.resultados[0].nombre,\n        email: this.resultados[0].email,\n        banco: this.resultados[0].banco,\n        tipo_cuenta: this.resultados[0].tipo_cuenta,\n        cuenta: this.resultados[0].numero_cuenta,\n        monto: 0\n      });\n    }\n\n    enviarTranferencia() {\n      //Si el formulario no es valido entonces se hace una evaluación de cada uno\n      //de los elementos reactivos y se hace resaltar en la vista cuales son los\n      //elementos no validos\n      console.log(this.datosTransferencia.invalid);\n\n      if (this.datosTransferencia.invalid) {\n        Swal.fire({\n          title: `El monto debe ser mayor a 0`,\n          toast: true\n        });\n        return Object.values(this.datosTransferencia.controls).forEach(control => {\n          if (control instanceof FormGroup) {\n            Object.values(control.controls).forEach(control => control.markAsTouched());\n          }\n        });\n      } else {\n        //Si es valido entonces deebmos cargar un loading en la Vista\n        //TODO: SwalFire\n        Swal.fire({\n          title: 'Deseas realizar la transferencia',\n          icon: 'warning',\n          confirmButtonText: 'Sí, guardar',\n          cancelButtonText: 'Cancelar',\n          showLoaderOnConfirm: true,\n          allowOutsideClick: false,\n          preConfirm: () => {\n            //El metodo preConfirm de Swal permite ejecutar una llamada ASYNC al servicio y esperar\n            //la respuesta para continuar con la ejecución\n            //Necesito recoger el rut del cliente\n            let login = JSON.parse(localStorage.getItem('login'));\n\n            if (Object.keys(login).length > 0) {\n              return this._cs.guardarTransferencia(login.usuario.rut, this.datosTransferencia.value).then(res => {\n                if (res.ok) {\n                  return res.body;\n                } else {\n                  return null;\n                }\n              }).catch(error => {\n                console.log(error.message);\n                Swal.fire(`Ocurrio un error! ${error.message}`);\n              });\n            } else {\n              return null;\n            }\n          }\n        }).then(result => {\n          if (result.isConfirmed) {\n            console.log(result.value);\n            Swal.fire({\n              title: `Se realizo transferencia`,\n              toast: true\n            });\n            this.datosTransferencia.reset();\n            /* this.router.navigateByUrl('/', {\n            state: {\n                message: 'Todo OK, eres vergatario',\n            },\n            }); */\n          }\n        });\n      }\n    }\n\n  }\n\n  TransferenciasComponent.ɵfac = function TransferenciasComponent_Factory(t) {\n    return new (t || TransferenciasComponent)(i0.ɵɵdirectiveInject(i1.ComunicationService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n\n  TransferenciasComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransferenciasComponent,\n    selectors: [[\"app-transferencias\"]],\n    decls: 61,\n    vars: 9,\n    consts: [[1, \"container\"], [1, \"text-center\", \"mt-5\"], [\"type\", \"text\", \"placeholder\", \"Nombre del destinatario\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\", \"change\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [1, \"col-lg-7\", \"mx-auto\"], [1, \"card\", \"mt-2\", \"mx-auto\", \"p-4\", \"bg-light\"], [1, \"card-body\", \"bg-light\"], [\"id\", \"msform\", \"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [1, \"controls\"], [1, \"col-md-6\"], [1, \"form-group\"], [1, \"fieldlabels\"], [\"type\", \"text\", \"placeholder\", \"Nombre\", \"formControlName\", \"nombre\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"rut_destinatario\", \"placeholder\", \"RUT\", 1, \"form-control\"], [\"for\", \"\", 1, \"fieldlabels\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"\", 1, \"fieldlabels\", \"text-right\"], [\"type\", \"text\", \"placeholder\", \"Fono\", \"formControlName\", \"tipo_cuenta\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Banco\", \"formControlName\", \"banco\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"CLP\", \"formControlName\", \"cuenta\", 1, \"form-control\"], [1, \"col-md-12\"], [\"class\", \"danger\", 4, \"ngIf\"], [\"type\", \"number\", \"placeholder\", \"CLP\", \"formControlName\", \"monto\", 1, \"form-control\"], [1, \"col-lg-12\"], [\"type\", \"submit\", \"value\", \"Registrar\", 1, \"btn\", \"btn-success\", \"btn-send\", \"pt-2\", \"btn-block\"], [3, \"value\"], [1, \"danger\"]],\n    template: function TransferenciasComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n        i0.ɵɵtext(3, \"Realizar Transferencia\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-form-field\")(5, \"input\", 2);\n        i0.ɵɵlistener(\"change\", function TransferenciasComponent_Template_input_change_5_listener($event) {\n          return ctx.selectedOne($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-autocomplete\", null, 3);\n        i0.ɵɵtemplate(8, TransferenciasComponent_mat_option_8_Template, 2, 2, \"mat-option\", 4);\n        i0.ɵɵpipe(9, \"async\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 5)(11, \"div\", 6)(12, \"div\", 7)(13, \"div\", 8)(14, \"div\", 0)(15, \"form\", 9);\n        i0.ɵɵlistener(\"ngSubmit\", function TransferenciasComponent_Template_form_ngSubmit_15_listener() {\n          return ctx.enviarTranferencia();\n        });\n        i0.ɵɵelementStart(16, \"div\", 10)(17, \"div\", 5)(18, \"div\", 11)(19, \"div\", 12)(20, \"label\", 13);\n        i0.ɵɵtext(21, \"Nombre:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 11)(24, \"div\", 12)(25, \"label\", 13);\n        i0.ɵɵtext(26, \"RUT: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 15);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(28, \"div\", 5)(29, \"div\", 11)(30, \"div\", 12)(31, \"label\", 16);\n        i0.ɵɵtext(32, \" Email: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(34, \"div\", 11)(35, \"div\", 12)(36, \"label\", 18);\n        i0.ɵɵtext(37, \" Cuenta: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"input\", 19);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(39, \"div\", 5)(40, \"div\", 11)(41, \"div\", 12)(42, \"label\", 18);\n        i0.ɵɵtext(43, \" Banco: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(44, \"input\", 20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(45, \"div\", 11)(46, \"div\", 12)(47, \"label\", 13);\n        i0.ɵɵtext(48, \"No. Cuenta: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(49, \"input\", 21);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(50, \"div\", 5)(51, \"div\", 22)(52, \"div\", 12)(53, \"label\", 13);\n        i0.ɵɵtext(54, \"Monto: *\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(55, TransferenciasComponent_small_55_Template, 2, 0, \"small\", 23);\n        i0.ɵɵelement(56, \"input\", 24);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(57, \"div\", 5)(58, \"div\", 25)(59, \"div\", 12);\n        i0.ɵɵelement(60, \"input\", 26);\n        i0.ɵɵelementEnd()()()()()()()()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(7);\n\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.busquedaControl)(\"matAutocomplete\", _r0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(9, 7, ctx.filteredOptions));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.datosTransferencia);\n        i0.ɵɵadvance(40);\n        i0.ɵɵproperty(\"ngIf\", ctx.montoNoValido);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.montoNoValido);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormControlDirective, i2.FormGroupDirective, i2.FormControlName, i4.MatAutocomplete, i4.MatAutocompleteTrigger, i5.MatOption, i6.MatFormField, i7.MatInput, i3.AsyncPipe],\n    styles: [\"body[_ngcontent-%COMP%]{font-family:Lato,sans-serif}h1[_ngcontent-%COMP%]{margin-bottom:40px}label[_ngcontent-%COMP%]{color:#333}.btn-send[_ngcontent-%COMP%]{font-weight:300;text-transform:uppercase;letter-spacing:.2em;width:80%;margin-left:3px}.help-block.with-errors[_ngcontent-%COMP%]{color:#ff5050;margin-top:5px}.card[_ngcontent-%COMP%]{margin-left:10px;margin-right:10px}\"]\n  });\n  return TransferenciasComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}